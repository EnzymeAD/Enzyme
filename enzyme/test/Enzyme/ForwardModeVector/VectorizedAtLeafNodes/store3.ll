; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --function-signature --include-generated-funcs
; RUN: %opt < %s %loadEnzyme -enzyme -enzyme-preopt=false -enzyme-vectorize-at-leaf-nodes -mem2reg -instsimplify -adce -correlated-propagation -simplifycfg -gvn -dse -S | FileCheck %s

; Function Attrs: noinline norecurse nounwind uwtable
define dso_local double @f(double* noalias nocapture %out, double %x) #0 {
entry:
  store double %x, double* %out, align 8
  store double 0.000000e+00, double* %out, align 8
  %res = load double, double* %out
  ret double %res
}

; Function Attrs: noinline nounwind uwtable
define dso_local <3 x double> @dsumsquare(double* %x, <3 x double>* %xp, double %inp, <3 x double> %in) local_unnamed_addr #1 {
entry:
  %call = tail call <3 x double> (i8*, ...) @__enzyme_fwddiff(i8* bitcast (double (double*, double)* @f to i8*), metadata !"enzyme_width", i64 3, double* %x, <3 x double>* %xp, double %inp, <3 x double> %in)
  ret <3 x double> %call
}

declare dso_local <3 x double> @__enzyme_fwddiff(i8*, ...) local_unnamed_addr

attributes #0 = { noinline norecurse nounwind uwtable }
attributes #1 = { noinline nounwind uwtable }


; CHECK: define internal <3 x double> @fwddiffe3f(double* noalias nocapture %out, <3 x double>* %"out'", double %x, <3 x double> %"x'")
; CHECK-NEXT:  entry:
; CHECK-NEXT:   store double 0.000000e+00, double* %out, align 8
; CHECK-NEXT:   store <3 x double> zeroinitializer, <3 x double>* %"out'", align 8
; CHECK-NEXT:   ret <3 x double> zeroinitializer
; CHECK-NEXT: }